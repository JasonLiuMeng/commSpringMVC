<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
                        
     <!-- 自动扫描 -->
    <context:component-scan base-package="com.ssm" />
                      
    <!-- 引入配置文件 -->
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties" />
    </bean>
    
    <!--  配置c3p0数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<!--最小连接数-->
		
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<!--最大连接数-->
		
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		<!--连接池初始化时获取的连接数，介于minPoolSize和maxPoolSize之间-->
		
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
		<!--最大空闲的时间，单位是秒，无用的连接空闲超时后会被回收，直到达到最小连接数-->
		
		<property name="acquireIncrement" value="${jdbc.acquireIncrement}" />
		<!--当前连接耗尽并且在尚未达到最大连接数限制的前提下，一次获取的新连接数量-->
		
		<property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}" />
		<!--进行连接空闲超时检查的时间间隔-->
		
		<property name="acquireRetryAttempts"
			value="${jdbc.acquireRetryAttempts}" />
		<!--定义在从数据库获取新连接失败后重试的次数，缺省值30次-->
		
		<property name="breakAfterAcquireFailure"
			value="${jdbc.breakAfterAcquireFailure}" />
		<!--
			获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但
			是数据源仍保持有效，并在下次调用getConnection()的时候继续重新尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源
			将申明已断开并永久关闭。Default:false
		-->
	</bean>
	
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:com/ssm/mapping/*.xml"></property>
    </bean>
	
	<!-- DAO接口所在包名，Spring会自动查找其下的类  注入sqlSessionFactory -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ssm.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>
	
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
	
</beans>